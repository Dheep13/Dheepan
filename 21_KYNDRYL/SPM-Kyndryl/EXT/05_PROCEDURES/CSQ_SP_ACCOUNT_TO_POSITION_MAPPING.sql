CREATE or REPLACE PROCEDURE EXT.CSQ_SP_ACCOUNT_TO_POSITION_MAPPING
( IN InPeriodSeq BIGINT
, IN InCalendarSeq BIGINT
, IN InProcessingUnitSeq BIGINT
, IN InTenantid VARCHAR(4)
, IN InPLRunSeq BIGINT default null
, IN InRunMode VARCHAR(30) default NULL)
	
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA EXT
AS
/**************************************************************************************************
	This stored procedure loads table with Account to Position Relation  
	to be used in generating Transacton Assignement as part of Stagehook

	REVISIONS:
	Ver        Date          Author           Description
	---------  -----------   ---------------  -----------------------------------------------------
	0.01       01-JUL-2022   Karthik Raju     Initial creation
	0.02	   01-SEP-2022	 Lee Pulsifer	  Added multiple BU processing

***************************************************************************************************/
	V_DEBUGLEVEL            INT;
	V_OBJECTNAME            VARCHAR(255) := ::CURRENT_OBJECT_SCHEMA || '.' ||::CURRENT_OBJECT_NAME;
	V_PROCESSINGUNITNAME    VARCHAR(127);
	V_PERIODNAME            VARCHAR(50);
	V_PERIODENDDATE         TIMESTAMP;
	V_CALENDARNAME          VARCHAR(50);
	V_PIPELINERUNSEQ        BIGINT;
	V_STAGETYPE_NAME        VARCHAR(40);
	V_STARTTIME             TIMESTAMP;
	V_RUNMODE               VARCHAR(30);
	--V_TERRITORYPROGRAM_NAME VARCHAR(127)  :='Smart Logic Territory Program 2';
    V_CLASSIFIERTYPE_NAME   VARCHAR(127)  :=  'TQ Generic Classifier Type' ; -- Shound be 'TandQ Territory Program Name'';
	V_BUSINESSUNITMASK		INT;  --LHP Added

BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(1, V_OBJECTNAME, 'EXITHANDLER.999', 'SQL_ERROR_CODE: '||::SQL_ERROR_CODE ||','||'SQL_ERROR_MESSAGE: '||::SQL_ERROR_MESSAGE, CURRENT_TIMESTAMP);
	END;

	SELECT DEBUGLEVEL 
	  INTO V_DEBUGLEVEL 
	  FROM EXT.CSQ_INTEGRATION_DEBUG_CTL 
	 WHERE OBJECT_NAME = ::CURRENT_OBJECT_NAME;
	
	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'ENTER.001', 'Enter: Procedure', CURRENT_TIMESTAMP);

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'PARAMETER.001'
	                                                        , 'PeriodSeq: ' || IfNULL(InPeriodSeq,'NULL') || 
	                                                          ' CalendarSeq: ' || IfNULL(InCalendarSeq,'NULL') ||
	                                                          ' ProcessingUnitSeq : ' || IfNULL(InProcessingUnitSeq,'NULL') ||
	                                                          ' TenantId : ' || IfNULL(InTenantid,'NULL') ||
	                                                          ' PLRunSeq : ' || IfNULL(InPLRunSeq,'NULL') ||
	                                                          ' RunMode : ' || IfNULL(InRunMode,'NULL')
	                                                        , CURRENT_TIMESTAMP);

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'PARAMETER.002', 'PROCESSINGUNIT: Get Processing Unit Name', CURRENT_TIMESTAMP);

	SELECT NAME 
	  INTO V_PROCESSINGUNITNAME 
	  FROM TCMP.CS_PROCESSINGUNIT 
	 WHERE CS_PROCESSINGUNIT.PROCESSINGUNITSEQ = InProcessingUnitSeq;

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'PARAMETER.003', 'PERIOD: Get Period Name', CURRENT_TIMESTAMP);

	SELECT CS_PERIOD.NAME, CS_PERIOD.ENDDATE
	  INTO V_PERIODNAME, V_PERIODENDDATE
	  FROM TCMP.CS_PERIOD 
	 WHERE CS_PERIOD.REMOVEDATE = TO_DATE('1-JAN-2200','DD-MON-YYYY')
	   AND CS_PERIOD.PERIODSEQ = InPeriodSeq;

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'PARAMETER.004', 'PERIOD: Get Calendar Name', CURRENT_TIMESTAMP);

	SELECT CS_CALENDAR.NAME
	  INTO V_CALENDARNAME
	  FROM TCMP.CS_CALENDAR 
	 WHERE CS_CALENDAR.REMOVEDATE = TO_DATE('1-JAN-2200','DD-MON-YYYY')
	   AND CS_CALENDAR.CALENDARSEQ = InCalendarSeq;


	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'PARAMETER.005', 'PLRUN: Get Latest Pipeline Run Details', CURRENT_TIMESTAMP);

	SELECT PIPELINERUNSEQ,  STARTTIME, RUNMODE
	  INTO V_PIPELINERUNSEQ,  V_STARTTIME, V_RUNMODE
	  FROM TCMP.CS_PLRUN
	 WHERE CS_PLRUN.REMOVEDATE = TO_DATE('1-JAN-2200','DD-MON-YYYY')
	   AND CS_PLRUN.PIPELINERUNSEQ = InPLRunSeq;
	
	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'PARAMETER.005'
	                              , 'ProcessingUnit: ' || V_PROCESSINGUNITNAME
	                              || ' Period: ' || V_PERIODNAME
	                              || ' PLRUN: Current PipelineRunSeq is ' || V_PIPELINERUNSEQ 
	                              || ' for Stage ' || V_STAGETYPE_NAME
	                              || ' with StartTime as ' || V_STARTTIME
	                              || ' and RunMode as ' || V_RUNMODE
	                              , CURRENT_TIMESTAMP);
	
	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'DATALOAD.001', 'DataLoad: Truncate Table CPQ_INTEGRATION_ACCOUNT_TO_POSITION_MAPPING', CURRENT_TIMESTAMP);

	TRUNCATE TABLE EXT.CSQ_INTEGRATION_ACCOUNT_TO_POSITION_MAPPING;

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'DATALOAD.002', 'DataLoad: Load CSQ_INTEGRATION_ACCOUNT_TO_POSITION_MAPPING Table', CURRENT_TIMESTAMP);

	INSERT INTO EXT.CSQ_INTEGRATION_ACCOUNT_TO_POSITION_MAPPING 
	WITH GETTNAMEBU as (  -- Get the list of one or more BU per Teritory Name
		  SELECT    CS_GENERICCLASSIFIER.GENERICATTRIBUTE1 AS TERRITORYPROGRAM_NAME
			     ,  CS_BUSINESSUNIT.MASK                   AS BUSINESSUNITMASK
			     --, CS_CLASSIFIER.CLASSIFIERID, CS_BUSINESSUNIT.NAME, CS_BUSINESSUNIT.BUSINESSUNITSEQ, CS_BUSINESSUNIT.PROCESSINGUNITSEQ, CS_GENERICCLASSIFIERTYPE.NAME
			FROM TCMP.CS_CLASSIFIER 
			JOIN TCMP.CS_GENERICCLASSIFIER 
			  ON CS_GENERICCLASSIFIER.CLASSIFIERSEQ = CS_CLASSIFIER.CLASSIFIERSEQ
			 AND CS_GENERICCLASSIFIER.REMOVEDATE = TO_DATE('1-JAN-2200','DD-MON-YYYY')
			 AND CS_GENERICCLASSIFIER.EFFECTIVESTARTDATE <= V_PERIODENDDATE  --TO_DATE('31-JAN-2200','DD-MON-YYYY') --
			 AND CS_GENERICCLASSIFIER.EFFECTIVEENDDATE > V_PERIODENDDATE  --TO_DATE('31-JAN-2200','DD-MON-YYYY') --
			JOIN TCMP.CS_GENERICCLASSIFIERTYPE
			  ON CS_GENERICCLASSIFIERTYPE.GENERICCLASSIFIERTYPESEQ = CS_CLASSIFIER.SELECTORID
			 AND CS_GENERICCLASSIFIERTYPE.NAME = V_CLASSIFIERTYPE_NAME
			JOIN TCMP.CS_BUSINESSUNIT 
			  ON CS_BUSINESSUNIT.NAME = CS_GENERICCLASSIFIER.GENERICATTRIBUTE2 
			 AND CS_BUSINESSUNIT.PROCESSINGUNITSEQ = InProcessingUnitSeq   --38280596832649319 -- 
		   WHERE CS_CLASSIFIER.REMOVEDATE = TO_DATE('1-JAN-2200','DD-MON-YYYY')
			 AND CS_GENERICCLASSIFIER.EFFECTIVESTARTDATE <= V_PERIODENDDATE  --TO_DATE('31-JAN-2200','DD-MON-YYYY') --
	         AND CS_GENERICCLASSIFIER.EFFECTIVEENDDATE > V_PERIODENDDATE  --TO_DATE('31-JAN-2200','DD-MON-YYYY') --
	        -- AND CS_GENERICCLASSIFIER.GENERICATTRIBUTE1 = V_TERRITORYPROGRAM_NAME   --'Smart Logic Territory Program 2'--
	)
	SELECT ROW_NUMBER() OVER (PARTITION BY CSQ_ACCOUNT.TENANTID, CS_POSITION.PROCESSINGUNITSEQ, CS_PERIOD.PERIODSEQ, CSQ_TERRITORYPROGRAM.NAME ORDER BY CSQ_ACCOUNT.ACCOUNTID, CSQ_TERRITORY.NAME, CS_POSITION.NAME ) AS ROWNUMBER
	     , CSQ_ACCOUNT.TENANTID
	     , CSQ_ACCOUNT.ACCOUNTID
	     , CSQ_TERRITORY.NAME TERRITORY_NAME
	     , CSQ_TERRITORYPROGRAM.NAME TERRITORYPROGRAM_NAME
	     , CS_POSITION.NAME POSITION_NAME
	     , CS_POSITION.PROCESSINGUNITSEQ 
	     , CSQ_TERRITORYPOSITION.SPLIT
	     , ALGNTYP2.NAME AS POSITIONALIGNMENTNAME
	     , CSQ_ALIGNMENTTYPE.NAME
	     , CS_PERIOD.NAME PERIOD_NAME
	     , CS_PERIOD.PERIODSEQ
	     , CS_PERIOD.CALENDARSEQ
	     , CSQ_ACCOUNT.ACCOUNTSEQ
	     , CSQ_ACCOUNT.EFFECTIVESTARTDATE ACCOUNT_EFFECTIVESTARTDATE
	     , CSQ_ACCOUNT.EFFECTIVEENDDATE ACCOUNT_EFFECTIVEENDDATE
	     , CSQ_TERRITORYACCOUNT.TERRITORYACCOUNTSEQ
	     , CSQ_TERRITORYACCOUNT.EFFECTIVESTARTDATE TERRITORYACCOUNT_EFFECTIVESTARTDATE
	     , CSQ_TERRITORYACCOUNT.EFFECTIVEENDDATE TERRITORYACCOUNT_EFFECTIVEENDDATE
	     , CSQ_TERRITORYPOSITION.TERRITORYPOSITIONSEQ
	     , CSQ_TERRITORYPOSITION.EFFECTIVESTARTDATE TERRITORYPOSITION_EFFECTIVESTARTDATE
	     , CSQ_TERRITORYPOSITION.EFFECTIVEENDDATE TERRITORYPOSITION_EFFECTIVEENDDATE 
	     , CSQ_TERRITORY.TERRITORYSEQ
	     , CSQ_TERRITORY.EFFECTIVESTARTDATE TERRITORY_EFFECTIVESTARTDATE
	     , CSQ_TERRITORY.EFFECTIVEENDDATE TERRITORY_EFFECTIVEENDDATE 
	     , CS_POSITION.RULEELEMENTOWNERSEQ POSITIONSEQ
	     , CS_POSITION.EFFECTIVESTARTDATE POSITION_EFFECTIVESTARTDATE
	     , CS_POSITION.EFFECTIVEENDDATE POSITION_EFFECTIVEENDDATE
	     , CSQ_TERRITORYPROGRAM.TERRITORYPROGRAMSEQ
	     , CSQ_TERRITORYPROGRAM.EFFECTIVESTARTDATE TERRITORYPROGRAM_EFFECTIVESTARTDATE
	     , CSQ_TERRITORYPROGRAM.EFFECTIVEENDDATE TERRITORYPROGRAM_EFFECTIVEENDDATE 
	     , CSQ_TPALIGNMENTTYPE.TPALIGNMENTTYPESEQ
	     , CSQ_TPALIGNMENTTYPE.EFFECTIVESTARTDATE TPALIGNMENTTYPE_EFFECTIVESTARTDATE
	     , CSQ_TPALIGNMENTTYPE.EFFECTIVEENDDATE TPALIGNMENTTYPE_EFFECTIVEENDDATE 
	     , CSQ_ALIGNMENTTYPE.ALIGNMENTTYPESEQ
	     , CSQ_ALIGNMENTTYPE.EFFECTIVESTARTDATE ALIGNMENTTYPE_EFFECTIVESTARTDATE
	     , CSQ_ALIGNMENTTYPE.EFFECTIVEENDDATE ALIGNMENTTYPE_EFFECTIVEENDDATE 
	  FROM TCMP.CSQ_ACCOUNT 
	  JOIN TCMP.CS_PERIOD 
	    ON CS_PERIOD.REMOVEDATE = TO_DATE('1-JAN-2200','DD-MON-YYYY')
	   AND CS_PERIOD.PERIODSEQ = inPeriodSeq  --2533274790397515 
	  JOIN TCMP.CSQ_TERRITORYACCOUNT
	    ON CSQ_TERRITORYACCOUNT.ACCOUNTSEQ = CSQ_ACCOUNT.ACCOUNTSEQ
	   AND CSQ_TERRITORYACCOUNT.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_TERRITORYACCOUNT.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_TERRITORYACCOUNT.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	   AND CSQ_TERRITORYACCOUNT.TPALIGNMENTTYPESEQ IS NOT NULL
	  JOIN TCMP.CSQ_TERRITORYPOSITION
	    ON CSQ_TERRITORYPOSITION.TERRITORYSEQ = CSQ_TERRITORYACCOUNT.TERRITORYSEQ
	   AND CSQ_TERRITORYPOSITION.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_TERRITORYPOSITION.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_TERRITORYPOSITION.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	  JOIN TCMP.CS_POSITION 
	    ON CS_POSITION.RULEELEMENTOWNERSEQ = CSQ_TERRITORYPOSITION.POSITIONSEQ
	   AND CS_POSITION.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CS_POSITION.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CS_POSITION.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	   AND CS_POSITION.PROCESSINGUNITSEQ = InProcessingUnitSeq --38280596832649319
	  JOIN TCMP.CSQ_TERRITORY
	    ON CSQ_TERRITORY.TERRITORYSEQ = CSQ_TERRITORYPOSITION.TERRITORYSEQ
	   AND CSQ_TERRITORY.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_TERRITORY.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_TERRITORY.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	  JOIN   TCMP.CSQ_TERRITORYPROGRAM
	    ON CSQ_TERRITORYPROGRAM.TERRITORYPROGRAMSEQ = CSQ_TERRITORY.TERRITORYPROGRAMSEQ
	   AND CSQ_TERRITORYPROGRAM.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_TERRITORYPROGRAM.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_TERRITORYPROGRAM.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	   --LHP AND CSQ_TERRITORYPROGRAM.NAME = V_TERRITORYPROGRAM_NAME --LHP 'Smart Logic Territory Program 2'
	   --LHP AND CSQ_TERRITORYPROGRAM.BUSINESSUNITMAP = V_BUSINESSUNITMASK
	  INNER JOIN GETTNAMEBU
	    ON GETTNAMEBU.TERRITORYPROGRAM_NAME = CSQ_TERRITORYPROGRAM.NAME
	   AND GETTNAMEBU.BUSINESSUNITMASK      = CSQ_TERRITORYPROGRAM.BUSINESSUNITMAP
	  LEFT JOIN TCMP.CSQ_TPALIGNMENTTYPE 
	    ON CSQ_TPALIGNMENTTYPE.TPALIGNMENTTYPESEQ = CSQ_TERRITORYACCOUNT.TPALIGNMENTTYPESEQ
	   AND CSQ_TPALIGNMENTTYPE.TERRITORYPROGRAMSEQ = CSQ_TERRITORYPROGRAM.TERRITORYPROGRAMSEQ
	   AND CSQ_TPALIGNMENTTYPE.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_TPALIGNMENTTYPE.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_TPALIGNMENTTYPE.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	  LEFT JOIN TCMP.CSQ_ALIGNMENTTYPE
	    ON CSQ_ALIGNMENTTYPE.ALIGNMENTTYPESEQ = CSQ_TPALIGNMENTTYPE.ALIGNMENTTYPESEQ
	   AND CSQ_ALIGNMENTTYPE.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_ALIGNMENTTYPE.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_ALIGNMENTTYPE.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	  LEFT JOIN TCMP.CSQ_TPALIGNMENTTYPE AS TPAL2	    
	    ON CSQ_TPALIGNMENTTYPE.TPALIGNMENTTYPESEQ = CSQ_TERRITORYPOSITION.TPALIGNMENTTYPESEQ	   
	    AND CSQ_TPALIGNMENTTYPE.TERRITORYPROGRAMSEQ = CSQ_TERRITORYPROGRAM.TERRITORYPROGRAMSEQ	   
	    AND CSQ_TPALIGNMENTTYPE.REMOVEDATE = '2200-01-01 00:00:00.000000000'	   
	    AND CSQ_TPALIGNMENTTYPE.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE	   
	    AND CSQ_TPALIGNMENTTYPE.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	  LEFT JOIN TCMP.CSQ_ALIGNMENTTYPE AS ALGNTYP2	    
	  ON CSQ_ALIGNMENTTYPE.ALIGNMENTTYPESEQ = TPAL2.ALIGNMENTTYPESEQ	   
	  AND CSQ_ALIGNMENTTYPE.REMOVEDATE = '2200-01-01 00:00:00.000000000'	   
	  AND CSQ_ALIGNMENTTYPE.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE	   
	  AND CSQ_ALIGNMENTTYPE.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE
	 WHERE CSQ_ACCOUNT.REMOVEDATE = '2200-01-01 00:00:00.000000000'
	   AND CSQ_ACCOUNT.EFFECTIVESTARTDATE < CS_PERIOD.ENDDATE
	   AND CSQ_ACCOUNT.EFFECTIVEENDDATE >= CS_PERIOD.ENDDATE;
	   
	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'DATALOAD.003', 'DataLoad: Data Ready in CSQ_INTEGRATION_ACCOUNT_TO_POSITION_MAPPING table' , CURRENT_TIMESTAMP);

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'DATALOAD.004', 'DataLoad: Truncate Table CSTA_GENERICCLASSIFIER', CURRENT_TIMESTAMP);

--	TRUNCATE TABLE EXT.CSTA_GENERICCLASSIFIER;
	TRUNCATE TABLE TCMP.CSTA_GENERICCLASSIFIER;

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'DATALOAD.005', 'DataLoad: Load CSTA_GENERICCLASSIFIER Table', CURRENT_TIMESTAMP);

	--INSERT INTO "EXT"."CSTA_GENERICCLASSIFIER" 
	INSERT INTO "TCMP"."CSTA_GENERICCLASSIFIER" 
	     ( TENANTID
	     , PROCESSINGUNITSEQ
	     , CLASSIFIERID
	     , EFFECTIVESTARTDATE
	     , EFFECTIVEENDDATE
	     , GENERICATTRIBUTE1
	     , GENERICATTRIBUTE2
	     , GENERICATTRIBUTE3
	     , GENERICATTRIBUTE4
	     , GENERICATTRIBUTE5
	     , GENERICATTRIBUTE6
	     , GENERICATTRIBUTE7
	     , GENERICATTRIBUTE8
	     , GENERICATTRIBUTE9
	     , GENERICATTRIBUTE10
	     , GENERICATTRIBUTE11
	     , GENERICATTRIBUTE12
	     , CLASSIFIERSEQ)
	SELECT TENANTID
	     , PROCESSINGUNITSEQ
	     , ACCOUNTID
	     , ACCOUNT_EFFECTIVESTARTDATE
	     , ACCOUNT_EFFECTIVEENDDATE
	     , POSITION_NAME
	     , SPLIT
	     , POSITIONALIGNMENTNAME
	     , ALIGNMENTTYPE_NAME
	     , TERRITORY_NAME
	     , TERRITORYPROGRAM_NAME
	     , PERIOD_NAME
	     , PERIODSEQ
	     , CALENDARSEQ
	     , ACCOUNTSEQ
	     , TERRITORYSEQ
	     , POSITIONSEQ
	     , ROWNUMBER
	  FROM EXT.CSQ_INTEGRATION_ACCOUNT_TO_POSITION_MAPPING;
	
	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'DATALOAD.006', 'DataLoad: Data Ready in CSTA_GENERICCLASSIFIER table' , CURRENT_TIMESTAMP);

	CALL EXT.CSQ_SP_INTEGRATION_DEBUG_WRITE(V_DEBUGLEVEL, V_OBJECTNAME, 'EXIT.001', 'Exit: Procedure', CURRENT_TIMESTAMP);
END
