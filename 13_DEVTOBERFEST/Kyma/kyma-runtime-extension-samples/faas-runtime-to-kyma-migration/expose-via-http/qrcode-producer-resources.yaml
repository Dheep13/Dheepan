apiVersion: serverless.kyma-project.io/v1alpha1
kind: Function
metadata:
  labels:
    app.kubernetes.io/name: qrcode-producer
  name: qrcode-producer
  namespace: default
spec:
  buildResources: {}
  deps: |-
    {
      "name": "qrcode-producer",
      "version": "0.0.1",
      "dependencies": {
        "qrcode": "1.3.3",
        "content-type": "=1.0.4"
      }
    }
  maxReplicas: 1
  minReplicas: 1
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  runtime: nodejs14
  source: |-
    "use strict";

    const qr = require("qrcode");
    const { PassThrough } = require("stream");
    const mime = require("content-type");

    module.exports = {
      main: async function (event, context) {
        return new Promise((resolve, reject) => {
          const nowUTC = new Date().toISOString();

          const stream = getResponseStream("image/png", event.extensions.response);
          stream.on("finish", resolve);
          stream.on("error", reject);

          qr.toFileStream(stream, nowUTC);
        });
      },
    };

    function getResponseStream(ct, response) {
      if (ct) {
        setResponseType(ct, response);
      }

      const rs = new PassThrough();
      rs.pipe(response, { end: true });

      return rs;
    }

    function setResponseType(ct, response) {
      mime.parse(ct);
      response.set("content-type", ct);
    }
---
apiVersion: gateway.kyma-project.io/v1beta1
kind: APIRule
metadata:
  labels:
    app.kubernetes.io/name: qrcode-producer
  name: qrcode-producer
  namespace: default
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  host: qrcode-producer
  service:
    name: qrcode-producer
    port: 80
  rules:
  - accessStrategies:
    - handler: allow
    methods:
    - GET
    path: /.*
